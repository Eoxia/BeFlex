@use "sass:math";

// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Init flexbox
@mixin flexbox() {
	display: flex;
	flex-flow: row wrap;
	flex: 0 1 auto;
}

@mixin transition($which: all, $time: 0.2s, $transition: ease-out) {
	transition: $which $time $transition;
}

@mixin full-size() {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

@function strip-unit($value) {
  //@return $value / ($value * 0 + 1);
  $valueDiv: $value * 0 + 1;
  @return math.div( $value, $valueDiv );
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

// Use 1%, or 1mw, or 1....
@mixin site-width-size($unit: null) {
  @if ( $unit == null ) {
    $unit: 1%;
  }
  @else {
    $unit: 1+#{$unit};
  }

  padding-left: calc(12 * #{$unit});
  padding-right: calc(12 * #{$unit});


  @media ( max-width: $media__medium ) {
    padding-left: calc(8 * #{$unit});
    padding-right: calc(8 * #{$unit});
  }
  @media ( max-width: $media__small ) {
    padding-left: calc(4 * #{$unit});
    padding-right: calc(4 * #{$unit});
  }
}

@mixin site-width-size-left($unit: null) {
  @if ( $unit == null ) {
    $unit: 1%;
  }
  @else {
    $unit: 1+#{$unit};
  }

  padding-left: calc(12 * #{$unit});


  @media ( max-width: $media__medium ) {
    padding-left: calc(8 * #{$unit});
  }
  @media ( max-width: $media__small ) {
    padding-left: calc(4 * #{$unit});
  }
}

@mixin site-width-size-right($unit: null) {
  @if ( $unit == null ) {
    $unit: 1%;
  }
  @else {
    $unit: 1+#{$unit};
  }

  padding-right: calc(12 * #{$unit});


  @media ( max-width: $media__medium ) {
    padding-right: calc(8 * #{$unit});
  }
  @media ( max-width: $media__small ) {
    padding-right: calc(4 * #{$unit});
  }
}
